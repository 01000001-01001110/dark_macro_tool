name: Build and Release
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.6'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller
      
      - name: Build EXE
        run: pyinstaller --name=dark_macro_tool --onefile --windowed --hidden-import=psutil --hidden-import=sqlite3 main.py
      
      - name: Create update package
        shell: pwsh
        run: |
          mkdir update_package
          copy dist\dark_macro_tool.exe update_package\
          $updateConfig = @{
              version = "${{ github.ref_name }}"
              file_updates = @(
                  @{
                      src = "dark_macro_tool.exe"
                      dest = "dark_macro_tool.exe"
                  }
              )
          }
          $updateConfig | ConvertTo-Json -Depth 5 | Set-Content update_package\update_config.json
          Compress-Archive update_package\* update.zip
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this release:
            - Please add release notes here.
          draft: false
          prerelease: false
      
      - name: Upload Release Asset (EXE)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/dark_macro_tool.exe
          asset_name: dark_macro_tool.exe
          asset_content_type: application/octet-stream
      
      - name: Upload Release Asset (Update Package)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./update.zip
          asset_name: update.zip
          asset_content_type: application/zip
